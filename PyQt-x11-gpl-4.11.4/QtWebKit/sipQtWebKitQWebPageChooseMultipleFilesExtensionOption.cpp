/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWebKit.h"

#line 34 "/home/pi/Github/ProjM124/PyQt-x11-gpl-4.11.4/sip/QtWebKit/qwebpage.sip"
#include <qwebpage.h>
#line 332 "/home/pi/Github/ProjM124/PyQt-x11-gpl-4.11.4/sip/QtWebKit/qwebpage.sip"
#include <qwebpage.h>
#line 31 "/home/pi/Github/ProjM124/PyQt-x11-gpl-4.11.4/QtWebKit/sipQtWebKitQWebPageChooseMultipleFilesExtensionOption.cpp"

#line 74 "/home/pi/Github/ProjM124/PyQt-x11-gpl-4.11.4/sip/QtWebKit/qwebframe.sip"
#include <qwebframe.h>
#line 35 "/home/pi/Github/ProjM124/PyQt-x11-gpl-4.11.4/QtWebKit/sipQtWebKitQWebPageChooseMultipleFilesExtensionOption.cpp"
#line 31 "sip/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 38 "/home/pi/Github/ProjM124/PyQt-x11-gpl-4.11.4/QtWebKit/sipQtWebKitQWebPageChooseMultipleFilesExtensionOption.cpp"


/* Call the instance's destructor. */
extern "C" {static void release_QWebPage_ChooseMultipleFilesExtensionOption(void *, int);}
static void release_QWebPage_ChooseMultipleFilesExtensionOption(void *sipCppV,int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast<QWebPage::ChooseMultipleFilesExtensionOption *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void assign_QWebPage_ChooseMultipleFilesExtensionOption(void *, SIP_SSIZE_T, const void *);}
static void assign_QWebPage_ChooseMultipleFilesExtensionOption(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QWebPage::ChooseMultipleFilesExtensionOption *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QWebPage::ChooseMultipleFilesExtensionOption *>(sipSrc);
}


extern "C" {static void *array_QWebPage_ChooseMultipleFilesExtensionOption(SIP_SSIZE_T);}
static void *array_QWebPage_ChooseMultipleFilesExtensionOption(SIP_SSIZE_T sipNrElem)
{
    return new QWebPage::ChooseMultipleFilesExtensionOption[sipNrElem];
}


extern "C" {static void *copy_QWebPage_ChooseMultipleFilesExtensionOption(const void *, SIP_SSIZE_T);}
static void *copy_QWebPage_ChooseMultipleFilesExtensionOption(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QWebPage::ChooseMultipleFilesExtensionOption(reinterpret_cast<const QWebPage::ChooseMultipleFilesExtensionOption *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QWebPage_ChooseMultipleFilesExtensionOption(sipSimpleWrapper *);}
static void dealloc_QWebPage_ChooseMultipleFilesExtensionOption(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QWebPage_ChooseMultipleFilesExtensionOption(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QWebPage_ChooseMultipleFilesExtensionOption(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QWebPage_ChooseMultipleFilesExtensionOption(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QWebPage::ChooseMultipleFilesExtensionOption *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QWebPage::ChooseMultipleFilesExtensionOption();
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    {
        const QWebPage::ChooseMultipleFilesExtensionOption* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QWebPage_ChooseMultipleFilesExtensionOption, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QWebPage::ChooseMultipleFilesExtensionOption(*a0);
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QWebPage_ChooseMultipleFilesExtensionOption[] = {{27, 255, 1}};


extern "C" {static PyObject *varget_QWebPage_ChooseMultipleFilesExtensionOption_parentFrame(void *, PyObject *, PyObject *);}
static PyObject *varget_QWebPage_ChooseMultipleFilesExtensionOption_parentFrame(void *sipSelf, PyObject *, PyObject *)
{
    QWebFrame*sipVal;
    QWebPage::ChooseMultipleFilesExtensionOption *sipCpp = reinterpret_cast<QWebPage::ChooseMultipleFilesExtensionOption *>(sipSelf);

    sipVal = sipCpp->parentFrame;

    return sipConvertFromType(sipVal, sipType_QWebFrame, NULL);
}


extern "C" {static int varset_QWebPage_ChooseMultipleFilesExtensionOption_parentFrame(void *, PyObject *, PyObject *);}
static int varset_QWebPage_ChooseMultipleFilesExtensionOption_parentFrame(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QWebFrame*sipVal;
    QWebPage::ChooseMultipleFilesExtensionOption *sipCpp = reinterpret_cast<QWebPage::ChooseMultipleFilesExtensionOption *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast<QWebFrame *>(sipForceConvertToType(sipPy,sipType_QWebFrame,NULL,0,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->parentFrame = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QWebPage_ChooseMultipleFilesExtensionOption_suggestedFileNames(void *, PyObject *, PyObject *);}
static PyObject *varget_QWebPage_ChooseMultipleFilesExtensionOption_suggestedFileNames(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
    QStringList*sipVal;
    QWebPage::ChooseMultipleFilesExtensionOption *sipCpp = reinterpret_cast<QWebPage::ChooseMultipleFilesExtensionOption *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -21);
    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->suggestedFileNames;

    sipPy = sipConvertFromType(sipVal, sipType_QStringList, NULL);
    sipKeepReference(sipPySelf, -21, sipPy);

    return sipPy;
}


extern "C" {static int varset_QWebPage_ChooseMultipleFilesExtensionOption_suggestedFileNames(void *, PyObject *, PyObject *);}
static int varset_QWebPage_ChooseMultipleFilesExtensionOption_suggestedFileNames(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QStringList*sipVal;
    QWebPage::ChooseMultipleFilesExtensionOption *sipCpp = reinterpret_cast<QWebPage::ChooseMultipleFilesExtensionOption *>(sipSelf);

    int sipValState;
    int sipIsErr = 0;

    sipVal = reinterpret_cast<QStringList *>(sipForceConvertToType(sipPy,sipType_QStringList,NULL,SIP_NOT_NONE,&sipValState,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->suggestedFileNames = *sipVal;

    sipReleaseType(sipVal, sipType_QStringList, sipValState);

    return 0;
}

sipVariableDef variables_QWebPage_ChooseMultipleFilesExtensionOption[] = {
    {InstanceVariable, sipName_parentFrame, (PyMethodDef *)varget_QWebPage_ChooseMultipleFilesExtensionOption_parentFrame, (PyMethodDef *)varset_QWebPage_ChooseMultipleFilesExtensionOption_parentFrame, NULL, NULL},
    {InstanceVariable, sipName_suggestedFileNames, (PyMethodDef *)varget_QWebPage_ChooseMultipleFilesExtensionOption_suggestedFileNames, (PyMethodDef *)varset_QWebPage_ChooseMultipleFilesExtensionOption_suggestedFileNames, NULL, NULL},
};

PyDoc_STRVAR(doc_QWebPage_ChooseMultipleFilesExtensionOption, "\1QWebPage.ChooseMultipleFilesExtensionOption()\n"
    "QWebPage.ChooseMultipleFilesExtensionOption(QWebPage.ChooseMultipleFilesExtensionOption)");


pyqt4ClassTypeDef sipTypeDef_QtWebKit_QWebPage_ChooseMultipleFilesExtensionOption = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_QWebPage__ChooseMultipleFilesExtensionOption,
        {0}
    },
    {
        sipNameNr_ChooseMultipleFilesExtensionOption,
        {20, 255, 0},
        0, 0,
        0, 0,
        2, variables_QWebPage_ChooseMultipleFilesExtensionOption,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QWebPage_ChooseMultipleFilesExtensionOption,
    -1,
    -1,
    supers_QWebPage_ChooseMultipleFilesExtensionOption,
    0,
    init_type_QWebPage_ChooseMultipleFilesExtensionOption,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QWebPage_ChooseMultipleFilesExtensionOption,
    assign_QWebPage_ChooseMultipleFilesExtensionOption,
    array_QWebPage_ChooseMultipleFilesExtensionOption,
    copy_QWebPage_ChooseMultipleFilesExtensionOption,
    release_QWebPage_ChooseMultipleFilesExtensionOption,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0
};
